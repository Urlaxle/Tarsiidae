#include <Arduino.h>

#include "cmdr.h"

//void process_serial_cmds(Serial_ *s) {
void process_serial_cmds(HardwareSerial *s) {
  char buf[32];
  size_t buf_idx = 0;
  size_t num = s->readBytes(&buf[0], sizeof(buf));
  if (num == 0) {
    return;
  }
  
  while (buf_idx < num) {
    if (motor_1_cmd_received) {
      Serial.write(&motor_1_str[0], sizeof(motor_1_str));
      Serial.print(": ");
      Serial.println((signed char)buf[buf_idx]);
      motor_output(MOTOR_1, (signed char)buf[buf_idx]);
      buf_idx += 1;
      motor_1_cmd_received = false;
    } else if (motor_2_cmd_received) {
      Serial.write(&motor_2_str[0], sizeof(motor_2_str));
      Serial.print(": ");
      Serial.println((signed char)buf[buf_idx]);
      motor_output(MOTOR_2, (signed char)buf[buf_idx]);
      buf_idx += 1;
      motor_2_cmd_received = false;
    }

    if (buf_idx >= num) {
      return;
    }
    
    if (buf[buf_idx] == motor_1_str[nm_motor_1]) {
      nm_motor_1 += 1;
    } else {
      nm_motor_1 = 0;
    }
    if (buf[buf_idx] == motor_2_str[nm_motor_2]) {
      nm_motor_2 += 1;
    } else {
      nm_motor_2 = 0;
    }
    if (buf[buf_idx] == motor_stop_str[nm_motor_stop]) {
      nm_motor_stop += 1;
    } else {
      nm_motor_stop = 0;
    }
    if (buf[buf_idx] == enc_send_str[nm_enc_send]) {
      nm_enc_send += 1;
    } else {
      nm_enc_send = 0;
    }
    if (buf[buf_idx] == enc_stop_str[nm_enc_stop]) {
      nm_enc_stop += 1;
    } else {
      nm_enc_stop = 0;
    }

    if (nm_motor_1 == sizeof(motor_1_str)-1) {
        motor_1_cmd_received = true;
        nm_motor_1 = 0;
        nm_motor_2 = 0;
        nm_motor_stop = 0;
        nm_enc_send = 0;
        nm_enc_stop = 0;
    } else if (nm_motor_2 == sizeof(motor_2_str)-1) {
        motor_2_cmd_received = true;
        nm_motor_1 = 0;
        nm_motor_2 = 0;
        nm_motor_stop = 0;
        nm_enc_send = 0;
        nm_enc_stop = 0;
    } else if (nm_motor_stop == sizeof(motor_stop_str)-1) {
        motor_stop_cmd_received = true;
        nm_motor_1 = 0;
        nm_motor_2 = 0;
        nm_motor_stop = 0;
        nm_enc_send = 0;
        nm_enc_stop = 0;
    } else if (nm_enc_send == sizeof(enc_send_str)-1) {
        enc_send_cmd_received = true;
        nm_motor_1 = 0;
        nm_motor_2 = 0;
        nm_motor_stop = 0;
        nm_enc_send = 0;
        nm_enc_stop = 0;
    } else if (nm_enc_stop == sizeof(enc_stop_str)-1) {
        enc_stop_cmd_received = true;
        nm_motor_1 = 0;
        nm_motor_2 = 0;
        nm_motor_stop = 0;
        nm_enc_send = 0;
        nm_enc_stop = 0;
    }

    if (motor_stop_cmd_received) {
      Serial.write(&motor_stop_str[0], sizeof(motor_stop_str));
      Serial.println("");
      motor_output(MOTOR_STOP, 0);
      motor_stop_cmd_received = false;
    } else if (enc_send_cmd_received) {
      Serial.write(&enc_send_str[0], sizeof(enc_send_str));
      Serial.println("");
      encs_send_msg = true;
      enc_send_cmd_received = false;
    } else if (enc_stop_cmd_received) {
      Serial.write(&enc_stop_str[0], sizeof(enc_stop_str));
      Serial.println("");
      encs_send_msg = false;
      enc_stop_cmd_received = false;
    }
    
    buf_idx += 1;
  }
}